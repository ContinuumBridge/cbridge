#!/bin/bash

# Must be run as root
if [ "$(id -u)" != "0" ]; then
    echo "This script should be run as 'root'. Type: sudo cbridge/setup"
    exit 1
fi

# Ensure everything is up to date
apt-get upgrade
apt-get update
rpi-update

apt-get install -y python-dev
apt-get install -y python-pip
apt-get install -y python-software-properties
#apt-get install -y nodejs npm node-semver
apt-get install -y python-pexpect
apt-get install -y python-twisted
pip install httplib2
#pip install dataset
pip install dropbox
pip install procname
pip install requests
pip install flask-peewee
pip install click

# For Bluetooth LE
apt-get install -y libglib2.0-dev 
apt-get install -y libdbus-1-dev 
apt-get install -y libusb-dev 
apt-get install -y libudev-dev 
apt-get install -y libical-dev
apt-get install -y systemd 
apt-get install -y libreadline-dev

apt-get install -y screen
apt-get install -y hostapd
apt-get install -y hostap-utils
apt-get install -y iw
apt-get install -y dnsmasq

# Bluetooth
mkdir ~/src
cd ~/src
wget https://www.kernel.org/pub/linux/bluetooth/bluez-5.14.tar.gz
tar xvfz bluez-5.14.tar.gz
cd bluez-5.14
./configure --prefix=/usr --mandir=/usr/share/man --sysconfdir=/etc --localstatedir=/var --disable-systemd
make
make install
# Not done by install for this version
cp ~/src/bluez-5.14/tools/hcitool /usr/bin/hcitool
cp ~/src/bluez-5.14/attrib/gatttool /usr/bin/gatttool

# nodejs
cd ~/src
mkdir /opt/node
wget http://nodejs.org/dist/v0.10.28/node-v0.10.28-linux-arm-pi.tar.gz
tar xvzf node-v0.10.28-linux-arm-pi.tar.gz
cp -r node-v0.10.28-linux-arm-pi/* /opt/node
echo -e "NODE_JS_HOME=\"/opt/node\"\nPATH=\"\$PATH:\$NODE_JS_HOME/bin\"\nexport PATH" > /etc/profile.d/nodejs.sh

# bridge software
REALNAME=$(logname)
REALGROUP=$(id -Gn $REALNAME)
mkdir /opt/cbridge
chown $REALNAME:$REALGROUP /opt/cbridge
cd /opt/cbridge
wget https://github.com/ContinuumBridge/cbridge/releases/download/v1.0.0/bridge_clone.tar.gz
tar xfz bridge_clone.tar.gz
mv bridge_clone bridge
cp bridge/scripts/cb /usr/bin/cb
cp bridge/scripts/cbridge /etc/init.d/cbridge
chmod 755 /etc/init.d/cbridge
update-rc.d cbridge defaults

# Create thisbridge.sh file
mkdir thisbridge
chown $REALNAME:$REALGROUP thisbridge
cd thisbridge
echo -e "export CB_DJANGO_CONTROLLER_ADDR=\"54.194.28.63\"\nexport CB_NODE_CONTROLLER_ADDR=\"54.194.28.63:3000\"" > thisbridge.sh
echo -e "export CB_DROPBOX_TOKEN=\"Dzl1HqI0MDEAAAAAAAAAAdR67r0pNVDNIYupKDiJ3Im7punvoqFXf5IAjqEMQ80e\"" >> thisbridge.sh
chown $REALNAME:$REALGROUP thisbridge.sh
